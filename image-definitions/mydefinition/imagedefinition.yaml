# This file is used to define a MS DevBox image definition configuration for testing purposes.
# Tools: VSCode, Azure Storage Explorer, SQL Server Management Studio, OpenVPN, and Docker Desktop.

$schema: "1.0"
# The name is used to identify the image definition.
name: "mytest-dev"
# The image is the technical base image name used for the DevBox. On top of this image, additional tools will be installed.
image: microsoftvisualstudio_visualstudioplustools_vs-2022-ent-general-win11-m365-gen2
# The description provides a brief overview of the image definition.
description: "This definition is for testing the team configuration in MS DevBox"
# The tasks section contains a list of tasks to be executed in background during the DevBox provisioning.
tasks:
# The following tasks are used for installing applications from the Windows Package Manager without user context.
  
  - name: winget
    description: Install VSCode
    parameters:
      package:  Microsoft.VisualStudioCode
  
  - name: winget
    description: Install Azure Storage Explorer
    parameters:
      package:  Microsoft.Azure.StorageExplorer
  
  - name: winget
    description: Install SQL Server Management Studio
    parameters:
      package:  Microsoft.SQLServerManagementStudio
  
  - name: winget
    description: Install OpenVPN
    parameters:
      package:  OpenVPNTechnologies.OpenVPN
  
  # The following tasks are an example of a PowerShell commands
  - name: powershell
    parameters:
      command: |
        # Download the latest Docker Desktop installer
        $dockerInstaller = Join-Path $env:TEMP "DockerDesktopInstaller.exe"
        Invoke-WebRequest -Uri "https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe" -OutFile $dockerInstaller

        # Install Docker Desktop silently
        Start-Process -FilePath $dockerInstaller -ArgumentList "install", "--quiet" -Wait

        # Add 'Authenticated Users' to 'docker-users' group
        if (-not (Get-LocalGroup -Name "docker-users" -ErrorAction SilentlyContinue)) {
            net localgroup docker-users /add
        }
        net localgroup docker-users "NT AUTHORITY\Authenticated Users" /add

        # Remove installer
        Remove-Item $dockerInstaller -Force

        Write-Host "Docker Desktop installation completed."

  - name: powershell
    parameters:
      command: |
        $env:Path = [System.Environment]::GetEnvironmentVariable('Path','Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path','User')

userTasks:
# The following tasks are used for installing applications from the Windows Package Manager in user context that will require user to login to the DevBox before automatically completing installation.
  - name: winget
    description: Install Postman
    parameters:
      package:  Postman.Postman
  
  # Many other tasks can be added here as needed, such as installing additional tools or configuring settings.